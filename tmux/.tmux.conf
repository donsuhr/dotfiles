setw -g mode-keys vi
set -ga terminal-overrides ",*256col*:Tc"
set -g default-terminal "xterm-256color"
set -ga update-environment ' ITERM_PROFILE'
set -g set-titles on
set -g set-titles-string "#T"
set -g mouse on

set -g focus-events on

set -g base-index 1
setw -g pane-base-index 1

setw -g monitor-activity on
set -g visual-activity on

setw -g automatic-rename on
set -g renumber-windows on

set -s escape-time 0 # Allows for faster key repetition

set -g status-justify left
set -g status-left-length 40
set -g status-right-length 90

set -g status-bg black
set -g status-fg white

setw -g window-status-activity-style fg=colour1,bg=colour0
setw -g window-status-bell-style fg=colour0,bg=colour1

set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} #S #[bg=colour0]#[fg=colour7]#{?client_prefix,#[fg=colour2],}#{?window_zoomed_flag, 🔍 ,}#[fg=colour1] 留 '
set -g status-right '#[fg=colour3]#[bg=colour3]#[fg=colour0]  #h #[bg=colour3]#[fg=colour1]#[bg=colour1]#[fg=colour0] %a %b %d %l:%M %p '

setw -g window-status-current-format "#[fg=colour0]#[bg=colour4]#[fg=colour7]#[bg=colour4] #I #{?window_flags,#{window_flags},} #[fg=colour7] #W #[fg=colour4]#[bg=colour0]"
setw -g window-status-format "[ #I: #W #{?window_flags,#{window_flags} ,}]"

# reload without quitting: C-b :source-file /absolute/path/to/your/.tmux.conf
#source /Users/bill/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf

# Reload config with r
bind-key r source-file ~/.tmux.conf \; display "Config Reloaded!"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and -
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi ] send-keys -X copy-selection
unbind-key -T copy-mode-vi y
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# copy to macOS clipboard
#if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
#if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
#if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
#if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
#if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
#if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'
